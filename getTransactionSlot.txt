"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTransactionSlot = getTransactionSlot;
const web3_js_1 = require("@solana/web3.js");
function getTransactionSlot(signature) {
    return __awaiter(this, void 0, void 0, function* () {
        const config = global.config;
        const connection = new web3_js_1.Connection(`https://mainnet.helius-rpc.com/?api-key=${config.apiKey}`);
        const transactionConfig = {
            commitment: "confirmed",
            maxSupportedTransactionVersion: 0,
        };
        try {
            const transactionDetails = yield connection.getTransaction(signature, transactionConfig);
            if (transactionDetails && transactionDetails.slot) {
                return transactionDetails;
            }
            else {
                throw new Error("Transaction details not found or slot information missing.");
            }
        }
        catch (error) {
            console.error("Failed to get transaction details:", error);
            throw error;
        }
    });
}
